layer { 
 name: "conv1" 
 type: "Convolution" 
 bottom: "data" 
 top: "conv1" 
 param { 
	  name: "conv1_w" 
	  lr_mult: 1 
	  decay_mult: 1 
 } 
 param { 
	  name: "conv1_b" 
	  lr_mult: 2 
	  decay_mult: 0 
 } 
 convolution_param { 
	  num_output: 24 
	  kernel_size: 7 
	  stride: 1 
	  weight_filler { 
	 	  type: "gaussian" 
	 	  std: 0.01 
	  } 
	  bias_filler { 
	 	  type: "constant" 
	 	  value: 0 
	  } 
 } 
} 
layer { 
 name: "relu1" 
 type: "ReLU" 
 bottom: "conv1" 
 top: "conv1" 
} 
layer { 
 name: "pool1" 
 type: "Pooling" 
 bottom: "conv1" 
 top: "pool1" 
 pooling_param { 
	  pool: MAX 
	  kernel_size: 3 
	  stride: 2 
 } 
} 
layer { 
 name: "conv2" 
 type: "Convolution" 
 bottom: "norm1" 
 top: "conv2" 
 param { 
	  name: "conv2_w" 
	  lr_mult: 1 
	  decay_mult: 1 
 } 
 param { 
	  name: "conv2_b" 
	  lr_mult: 2 
	  decay_mult: 0 
 } 
 convolution_param { 
	  num_output: 64 
	  kernel_size: 5 
	  stride: 1 
	  weight_filler { 
	 	  type: "gaussian" 
	 	  std: 0.01 
	  } 
	  bias_filler { 
	 	  type: "constant" 
	 	  value: 0 
	  } 
 } 
} 
layer { 
 name: "relu2" 
 type: "ReLU" 
 bottom: "conv2" 
 top: "conv2" 
} 
layer { 
 name: "pool2" 
 type: "Pooling" 
 bottom: "conv2" 
 top: "pool2" 
 pooling_param { 
	  pool: MAX 
	  kernel_size: 3 
	  stride: 2 
 } 
} 
layer { 
 name: "conv3" 
 type: "Convolution" 
 bottom: "norm2" 
 top: "conv3" 
 param { 
	  name: "conv3_w" 
	  lr_mult: 1 
	  decay_mult: 1 
 } 
 param { 
	  name: "conv3_b" 
	  lr_mult: 2 
	  decay_mult: 0 
 } 
 convolution_param { 
	  num_output: 96 
	  pad: 0 
	  kernel_size: 3 
	  weight_filler { 
	 	  type: "gaussian" 
	 	  std: 0.01 
	  } 
	  bias_filler { 
	 	  type: "constant" 
	 	  value: 0 
	  } 
 } 
} 
layer { 
 name: "relu3" 
 type: "ReLU" 
 bottom: "conv3" 
 top: "conv3" 
} 
layer { 
 name: "conv4" 
 type: "Convolution" 
 bottom: "conv3" 
 top: "conv4" 
 param { 
	  name: "conv4_w" 
	  lr_mult: 1 
	  decay_mult: 1 
 } 
 param { 
	  name: "conv4_b" 
	  lr_mult: 2 
	  decay_mult: 0 
 } 
 convolution_param { 
	  num_output: 96 
	  kernel_size: 3 
	  weight_filler { 
	 	  type: "gaussian" 
	 	  std: 0.01 
	  } 
	  bias_filler { 
	 	  type: "constant" 
	 	  value: 0 
	  } 
 } 
} 
layer { 
 name: "relu4" 
 type: "ReLU" 
 bottom: "conv4" 
 top: "conv4" 
} 
layer { 
 name: "conv5" 
 type: "Convolution" 
 bottom: "conv4" 
 top: "conv5" 
 param { 
	  name: "conv5_w" 
	  lr_mult: 1 
	  decay_mult: 1 
 } 
 param { 
	  name: "conv5_b" 
	  lr_mult: 2 
	  decay_mult: 0 
 } 
 convolution_param { 
	  num_output: 64 
	  kernel_size: 3 
	  weight_filler { 
	 	  type: "gaussian" 
	 	  std: 0.01 
	  } 
	  bias_filler { 
	 	  type: "constant" 
	 	  value: 0 
	  } 
 } 
} 
layer { 
 name: "relu5" 
 type: "ReLU" 
 bottom: "conv5" 
 top: "conv5" 
} 
layer { 
 name: "pool5" 
 type: "Pooling" 
 bottom: "conv5" 
 top: "pool5" 
 pooling_param { 
	  pool: MAX 
	  kernel_size: 3 
	  stride: 2 
 } 
} 
layer { 
 name: "conv1_p" 
 type: "Convolution" 
 bottom: "data_p" 
 top: "conv1_p" 
 param { 
	  name: "conv1_w" 
	  lr_mult: 1 
	  decay_mult: 1 
 } 
 param { 
	  name: "conv1_b" 
	  lr_mult: 2 
	  decay_mult: 0 
 } 
 convolution_param { 
	  num_output: 24 
	  kernel_size: 7 
	  stride: 1 
	  weight_filler { 
	 	  type: "gaussian" 
	 	  std: 0.01 
	  } 
	  bias_filler { 
	 	  type: "constant" 
	 	  value: 0 
	  } 
 } 
} 
layer { 
 name: "relu1_p" 
 type: "ReLU" 
 bottom: "conv1_p" 
 top: "conv1_p" 
} 
layer { 
 name: "pool1_p" 
 type: "Pooling" 
 bottom: "conv1_p" 
 top: "pool1_p" 
 pooling_param { 
	  pool: MAX 
	  kernel_size: 3 
	  stride: 2 
 } 
} 
layer { 
 name: "conv2_p" 
 type: "Convolution" 
 bottom: "norm1_p" 
 top: "conv2_p" 
 param { 
	  name: "conv2_w" 
	  lr_mult: 1 
	  decay_mult: 1 
 } 
 param { 
	  name: "conv2_b" 
	  lr_mult: 2 
	  decay_mult: 0 
 } 
 convolution_param { 
	  num_output: 64 
	  kernel_size: 5 
	  stride: 1 
	  weight_filler { 
	 	  type: "gaussian" 
	 	  std: 0.01 
	  } 
	  bias_filler { 
	 	  type: "constant" 
	 	  value: 0 
	  } 
 } 
} 
layer { 
 name: "relu2_p" 
 type: "ReLU" 
 bottom: "conv2_p" 
 top: "conv2_p" 
} 
layer { 
 name: "pool2_p" 
 type: "Pooling" 
 bottom: "conv2_p" 
 top: "pool2_p" 
 pooling_param { 
	  pool: MAX 
	  kernel_size: 3 
	  stride: 2 
 } 
} 
layer { 
 name: "conv3_p" 
 type: "Convolution" 
 bottom: "norm2_p" 
 top: "conv3_p" 
 param { 
	  name: "conv3_w" 
	  lr_mult: 1 
	  decay_mult: 1 
 } 
 param { 
	  name: "conv3_b" 
	  lr_mult: 2 
	  decay_mult: 0 
 } 
 convolution_param { 
	  num_output: 96 
	  pad: 0 
	  kernel_size: 3 
	  weight_filler { 
	 	  type: "gaussian" 
	 	  std: 0.01 
	  } 
	  bias_filler { 
	 	  type: "constant" 
	 	  value: 0 
	  } 
 } 
} 
layer { 
 name: "relu3_p" 
 type: "ReLU" 
 bottom: "conv3_p" 
 top: "conv3_p" 
} 
layer { 
 name: "conv4_p" 
 type: "Convolution" 
 bottom: "conv3_p" 
 top: "conv4_p" 
 param { 
	  name: "conv4_w" 
	  lr_mult: 1 
	  decay_mult: 1 
 } 
 param { 
	  name: "conv4_b" 
	  lr_mult: 2 
	  decay_mult: 0 
 } 
 convolution_param { 
	  num_output: 96 
	  kernel_size: 3 
	  weight_filler { 
	 	  type: "gaussian" 
	 	  std: 0.01 
	  } 
	  bias_filler { 
	 	  type: "constant" 
	 	  value: 0 
	  } 
 } 
} 
layer { 
 name: "relu4_p" 
 type: "ReLU" 
 bottom: "conv4_p" 
 top: "conv4_p" 
} 
layer { 
 name: "conv5_p" 
 type: "Convolution" 
 bottom: "conv4_p" 
 top: "conv5_p" 
 param { 
	  name: "conv5_w" 
	  lr_mult: 1 
	  decay_mult: 1 
 } 
 param { 
	  name: "conv5_b" 
	  lr_mult: 2 
	  decay_mult: 0 
 } 
 convolution_param { 
	  num_output: 64 
	  kernel_size: 3 
	  weight_filler { 
	 	  type: "gaussian" 
	 	  std: 0.01 
	  } 
	  bias_filler { 
	 	  type: "constant" 
	 	  value: 0 
	  } 
 } 
} 
layer { 
 name: "relu5_p" 
 type: "ReLU" 
 bottom: "conv5_p" 
 top: "conv5_p" 
} 
layer { 
 name: "pool5_p" 
 type: "Pooling" 
 bottom: "conv5_p" 
 top: "pool5_p" 
 pooling_param { 
	  pool: MAX 
	  kernel_size: 3 
	  stride: 2 
 } 
} 
layer { 
 name: "common_fc" 
 type: "InnerProduct" 
 bottom: "pool5" 
 top: "common_fc" 
 param { 
	  lr_mult: 1 
	  decay_mult: 1 
 } 
 param { 
	  lr_mult: 2 
	  decay_mult: 0 
 } 
 inner_product_param { 
	  num_output: 512 
	  weight_filler { 
	 	  type: "gaussian" 
	 	  std: 0.005 
	  } 
	  bias_filler { 
	 	  type: "constant" 
	 	  value: 1 
	  } 
 } 
} 
layer { 
 name: "relu_common" 
 type: "ReLU" 
 bottom: "common_fc" 
 top: "common_fc" 
} 
